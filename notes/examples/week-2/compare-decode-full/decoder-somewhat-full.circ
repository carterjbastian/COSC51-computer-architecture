<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.7.1" version="1.0">
This file is intended to be loaded by Logisim (http://www.cburch.com/logisim/).
<lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="OR Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#Base" name="6">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="6" map="Button2" name="Menu Tool"/>
    <tool lib="6" map="Button3" name="Menu Tool"/>
    <tool lib="6" map="Ctrl Button1" name="Poke Tool"/>
  </mappings>
  <toolbar>
    <tool lib="6" name="Poke Tool"/>
    <tool lib="6" name="Edit Tool"/>
    <tool lib="6" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="tristate" val="false"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="0" name="Tunnel">
      <a name="facing" val="east"/>
    </tool>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif plain 12"/>
    <wire from="(780,270)" to="(890,270)"/>
    <wire from="(100,80)" to="(100,170)"/>
    <wire from="(140,300)" to="(140,410)"/>
    <wire from="(280,100)" to="(350,100)"/>
    <wire from="(140,40)" to="(140,120)"/>
    <wire from="(960,160)" to="(960,180)"/>
    <wire from="(140,210)" to="(350,210)"/>
    <wire from="(330,630)" to="(340,630)"/>
    <wire from="(140,120)" to="(260,120)"/>
    <wire from="(280,190)" to="(350,190)"/>
    <wire from="(770,250)" to="(780,250)"/>
    <wire from="(760,200)" to="(760,250)"/>
    <wire from="(1030,190)" to="(1060,190)"/>
    <wire from="(330,570)" to="(340,570)"/>
    <wire from="(120,280)" to="(350,280)"/>
    <wire from="(400,100)" to="(430,100)"/>
    <wire from="(120,100)" to="(120,190)"/>
    <wire from="(100,170)" to="(260,170)"/>
    <wire from="(100,170)" to="(100,260)"/>
    <wire from="(970,200)" to="(1000,200)"/>
    <wire from="(400,390)" to="(430,390)"/>
    <wire from="(140,300)" to="(260,300)"/>
    <wire from="(330,550)" to="(340,550)"/>
    <wire from="(280,370)" to="(350,370)"/>
    <wire from="(100,40)" to="(100,80)"/>
    <wire from="(280,260)" to="(350,260)"/>
    <wire from="(780,200)" to="(780,250)"/>
    <wire from="(100,370)" to="(100,540)"/>
    <wire from="(100,80)" to="(260,80)"/>
    <wire from="(330,610)" to="(340,610)"/>
    <wire from="(330,650)" to="(350,650)"/>
    <wire from="(280,300)" to="(350,300)"/>
    <wire from="(120,190)" to="(260,190)"/>
    <wire from="(400,190)" to="(430,190)"/>
    <wire from="(120,190)" to="(120,280)"/>
    <wire from="(890,240)" to="(890,270)"/>
    <wire from="(960,180)" to="(1000,180)"/>
    <wire from="(970,200)" to="(970,230)"/>
    <wire from="(120,100)" to="(260,100)"/>
    <wire from="(740,250)" to="(750,250)"/>
    <wire from="(280,80)" to="(350,80)"/>
    <wire from="(280,120)" to="(350,120)"/>
    <wire from="(120,390)" to="(120,540)"/>
    <wire from="(140,210)" to="(140,300)"/>
    <wire from="(910,160)" to="(960,160)"/>
    <wire from="(120,390)" to="(350,390)"/>
    <wire from="(400,570)" to="(410,570)"/>
    <wire from="(120,280)" to="(120,390)"/>
    <wire from="(740,200)" to="(740,250)"/>
    <wire from="(100,260)" to="(260,260)"/>
    <wire from="(400,280)" to="(430,280)"/>
    <wire from="(280,170)" to="(350,170)"/>
    <wire from="(100,370)" to="(260,370)"/>
    <wire from="(140,410)" to="(140,540)"/>
    <wire from="(910,230)" to="(970,230)"/>
    <wire from="(140,410)" to="(350,410)"/>
    <wire from="(330,590)" to="(340,590)"/>
    <wire from="(120,40)" to="(120,100)"/>
    <wire from="(400,630)" to="(410,630)"/>
    <wire from="(100,260)" to="(100,370)"/>
    <wire from="(140,120)" to="(140,210)"/>
    <comp lib="6" loc="(33,97)" name="Text">
      <a name="text" val="000"/>
    </comp>
    <comp lib="0" loc="(120,40)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="6" loc="(451,523)" name="Text">
      <a name="text" val="And yes, we'd probably absorb the inverters into the AND inputs.   e.g.:"/>
    </comp>
    <comp lib="6" loc="(1120,285)" name="Text">
      <a name="text" val="for the combos that should output 1"/>
    </comp>
    <comp lib="0" loc="(430,280)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="6" loc="(247,673)" name="Text">
      <a name="text" val="Etc."/>
    </comp>
    <comp lib="1" loc="(400,390)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(430,100)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="6" loc="(511,102)" name="Text">
      <a name="text" val="recognizes &quot;000&quot;"/>
    </comp>
    <comp lib="6" loc="(515,281)" name="Text">
      <a name="text" val="recognizes &quot;010&quot;"/>
    </comp>
    <comp lib="6" loc="(893,117)" name="Text">
      <a name="text" val="LogiSim's baked-in version"/>
    </comp>
    <comp lib="0" loc="(430,390)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(400,570)" name="AND Gate">
      <a name="inputs" val="3"/>
      <a name="negate0" val="true"/>
      <a name="negate1" val="true"/>
      <a name="negate2" val="true"/>
    </comp>
    <comp lib="1" loc="(400,280)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(780,200)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(430,190)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(280,100)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="2" loc="(890,240)" name="Decoder">
      <a name="select" val="3"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="1" loc="(280,80)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(400,630)" name="AND Gate">
      <a name="inputs" val="3"/>
      <a name="negate0" val="true"/>
      <a name="negate1" val="true"/>
    </comp>
    <comp lib="1" loc="(280,120)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="6" loc="(515,191)" name="Text">
      <a name="text" val="recognizes &quot;001&quot;"/>
    </comp>
    <comp lib="1" loc="(1030,190)" name="OR Gate">
      <a name="size" val="30"/>
      <a name="inputs" val="2"/>
    </comp>
    <comp lib="6" loc="(1117,226)" name="Text">
      <a name="text" val="we can calculate an arbitrary binary"/>
    </comp>
    <comp lib="6" loc="(34,284)" name="Text">
      <a name="text" val="010"/>
    </comp>
    <comp lib="0" loc="(760,200)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="1" loc="(280,190)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="1" loc="(280,260)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="6" loc="(515,391)" name="Text">
      <a name="text" val="recognizes &quot;011&quot;"/>
    </comp>
    <comp lib="6" loc="(34,194)" name="Text">
      <a name="text" val="001"/>
    </comp>
    <comp lib="1" loc="(280,370)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="6" loc="(33,386)" name="Text">
      <a name="text" val="011"/>
    </comp>
    <comp lib="6" loc="(784,316)" name="Text">
      <a name="text" val="three 1-bit wires to a 3-bit bundle"/>
    </comp>
    <comp lib="1" loc="(280,300)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="6" loc="(1128,246)" name="Text">
      <a name="text" val="function on k bits by sending the k bits"/>
    </comp>
    <comp lib="1" loc="(400,100)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="6" loc="(752,299)" name="Text">
      <a name="text" val="a LogiSim splitter, taking"/>
    </comp>
    <comp lib="6" loc="(889,137)" name="Text">
      <a name="text" val="of the decoder on the left"/>
    </comp>
    <comp lib="1" loc="(280,170)" name="NOT Gate">
      <a name="size" val="20"/>
    </comp>
    <comp lib="0" loc="(100,40)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="6" loc="(1141,267)" name="Text">
      <a name="text" val="into a decoder, and then OR-ing the outputs"/>
    </comp>
    <comp lib="6" loc="(335,473)" name="Text">
      <a name="text" val="and so on, for 100 through 111"/>
    </comp>
    <comp lib="0" loc="(140,40)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="0" loc="(740,200)" name="Pin">
      <a name="facing" val="south"/>
      <a name="tristate" val="false"/>
    </comp>
    <comp lib="1" loc="(400,190)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="0" loc="(780,270)" name="Splitter">
      <a name="facing" val="north"/>
      <a name="fanout" val="3"/>
      <a name="incoming" val="3"/>
    </comp>
  </circuit>
</project>
