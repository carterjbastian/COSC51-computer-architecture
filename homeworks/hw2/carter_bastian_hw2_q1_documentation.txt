{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Homework 2 Q1 Documentation\
\
I made 4 sub-circuits for this problem and tested each separately.\
1. Error sub-circuit.\
This sub-circuit tests if a 4-bit input is a valid Binary Coded Decimal (BCD). It outputs 0 if the input is a BCD and 1 otherwise. It works by checking if the binary input equates to less than 8, 8 exactly, or 9 exactly. If none of these conditions is true, the input is not a BCD.\
I tested this by inputing each potential 4-bit combination into the system to ensure each output was appropriate.\
\
2. Digit Decoder sub-circuit\
This is a Decoder for a BCD - it decodes a BCD into a digit 0-9. It is built not to handle the cases of binary values that are not BCDs (since the Error sub-circuit ensures invalid input will not need to be handled here).\
I tested this by inputing each potential BCD into the circuit to ensure each output was appropriate.\
\
3. Month sub-circuit\
This takes two 4-bit BCDs representing a month, categorizes the month into one of 4 groups (invalid/non-existent month, 28-day month, 30-day month, or 31-day month), and outputs a meaningful result. It does this by testing if the input represents a 28-day month (feb), a 30-day month (which could start with d1=0 or d1=1), or a 31-day month (also could begin with d1=0 or d1=1). If none of these is the case, the month is invalid. \
I tested this by inputing each valid BCD-encoded month as well as a few invalid months (00, 13, 20, 84, etc.).\
\
4. Day sub-circuit\
This takes two 4-bit BCDs representing a day, categorizes the day into 4 groups (invalid/non-existent day, less-than or equal to 28, 29 or 30, and 31). If the BCD-encoded day is 00, the day is invalid.\
I tested this by inputing edge cases (0, 28, 29, 30, 31, 32), and a few middle-of-the-road cases (11, 20, 05, 42, etc.).\
\
The Main circuit combines these sub-circuits to output 1 if the 4 BCDs input to the circuit represent a calendar date in the year 2015.\
It works by testing the input to make sure each of the 4 4-bit inputs represents a BCD (if they do not, the output is 0, meaning the day does not exist in the calendar year) and the "Error" output bit is flagged as 1). It then parses the month and day inputs (using their respective sub-circuits) into groups based on the acceptable number of days in the input month and the number of days input (respectively). Based on this information, it uses three boolean gates to test if the input date exists in the calendar year: \
(1) if the input date is valid and the month can have 31 days, the date exists\
(2) if the input date is valid and the day input is 28 or less, the date exists\
(3) if the input date is valid, the month can have 29 or 30 days, and the day input was 29 or 30, the date exists.\
In all other cases, the day does not exist and a zero is output.\
\
I tested this main circuit by inputing a combination of valid dates / edge cases (01 01, 01 31, 02 28, 03 31, 09 30, 12 31, etc.) and invalid dates (00 00, 01 00, 00 01, 02 29, 03 40, 13 01, 12 34, etc.).\
}