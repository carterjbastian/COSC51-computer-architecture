{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 HW5 Q5
\b0 \
\
I would say that, overall, my Q4 assembly implementation is quite similar to my HW2 circuit implementation; both used the same general strategy of decoding the semantically meaningful BCDs into numerically meaningful representations of the numbers and then using case-based logic to determine the appropriate output.\
\
However, the way in which this was accomplished was different between the two implementations. In the circuit implementation, we had essentially two big abstractions (a "Day Decoder" sub-circuit and a "Month Decoder" sub-circuit), which took care of all the necessary logic needed to reduce the number of cases and make a decision on the output.\
\
On the other hand, the Y86 implementation had more abstractions (this time sub-routines) which made it so that we were handling a larger number of more detailed case-based decisions (analogous to a bunch of if-then statements) than in the circuit implementation. As a result of this and the limitations inherent in the ISA itself (restrictions on ways in which we can and can't work directly with memory and registers), the circuit implementation was simpler to understand probably more efficient (no need for a large number of abstractions or reads/writes to memory and registers).}