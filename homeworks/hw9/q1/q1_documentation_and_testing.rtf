{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 HW9 Question 1 Documentation and Testing
\b0 \
\
To get the output in q1_out.txt, I compiled and ran the q1_trace_simulator.c program 4 times (one for each of the cache models). The only two lines that needed to be changed with each successive run are lines 40 and 50.\
\
In general, the C program creates instances of a virtual cache and trace simulator from the virtual_cache.h header file. Then it goes through each memory value in the trace file (using input based on the io.c file provided with us, but modified slightly).\
\
\
\ul Documentation:\ulnone \
For direct mapped:\
	line 40: 
\i vcp = make_cache(1, 64);\
	
\i0 line 50: 
\i printf("mode = direct mapped\\n");
\i0 \
\
For 2-way set associative:\
	line 40: 
\i vcp = make_cache(2, 32);
\i0 \
	line 50: 
\i printf("mode = 2-way set associative\\n");
\i0 \
\
For 4-way set associative:\
	line 40: 
\i vcp = make_cache(4, 16);\
	
\i0 line 50: 
\i printf("mode = 4-way set associative\\n");
\i0 \
\
For fully associative:\
	line 40: 
\i vcp = make_cache(64, 1);
\i0 \
	line 50: 
\i printf("mode = fully associative\\n");
\i0 \
\
For each change (in order), I ran the following commands from the terminal to compile and generate the output:\
\
gcc -m32 -Wall -o Q1 q1_trace_simulator.c\
./Q1 ../sample.txt >> q1_out.txt\
\
\ul Testing:\ulnone \
I compared my output to the sample output provided and it matched perfectly.}