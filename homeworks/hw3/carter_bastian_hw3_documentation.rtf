{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 HW3 Documentation\
\
Question 1:\
I tested this by enabling the circuit and switching the data value back and forth both before and after raising the clock. The data only changed when I rose the clock.\
\
Question 3:\
I tested this by inputing multiple 4-bit binary values and trying to load them into the output, with both the circuit enabled and not, and then both before and after raising the clock. The output data only changed to match the input data when I rose the clock.\
\
Question 5:\
I tested each component / subcircuit of this individually and then altogether in the main circuit.\
\
For the regwriter, I tested it by loading multiple values into valE and valM, and then different locations into dstE and dstM and clocking the values with reqE and reqM turned off and, later, turned on.\
\
I also made the circuit such that, when both dstE and dstM are pointing to the same register and both reqE and reqM are on, only the value of valM is written into the register. I tested this edge case with different combinations of valE/valM, dstE/dstM, and reqE/reqM.\
\
For the regreader, testing was much more straightforward. I just loaded different values into the inputs and modified the srcA and srcB inputs to make sure that the multiplexer was working correctly.\
\
I tested the main hw3 circuit by writing various values to various registers and clocking them. I then read values from the register and tried reading registers whose changes hadn't been clocked yet. I also watched changes happen by reading a register while I clocked a change on it. Then I tested the clear functionality.}